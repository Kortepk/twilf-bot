import sqlite3
from config import ADMIN_USER_ID

async def start(update, context):
    await update.message.reply_text("üÜî –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: /cancel <ID>")

async def handler(update, context):
    try:
        booking_id = int(context.args[0])
        user_id = update.message.from_user.id

        conn = sqlite3.connect('restaurant.db')
        cursor = conn.cursor()
        cursor.execute('SELECT user_id FROM bookings WHERE id = ?', (booking_id,))
        booking = cursor.fetchone()

        if booking:
            if user_id == booking[0] or user_id == ADMIN_USER_ID:
                cursor.execute('DELETE FROM bookings WHERE id = ?', (booking_id,))
                conn.commit()
                await update.message.reply_text(f'üóëÔ∏è –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ {booking_id} –æ—Ç–º–µ–Ω–µ–Ω–æ.')
            else:
                await update.message.reply_text('üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ.')
        else:
            await update.message.reply_text('‚ùå –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')

        conn.close()
    except (IndexError, ValueError):
        await update.message.reply_text('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /cancel <ID>')